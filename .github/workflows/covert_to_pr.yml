name: Convert Issue to Pull Request

on:
  issues:
    types: [opened, labeled]

jobs:
  convert_issue_to_pr:
    if: github.event.label.name == 'Add'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get issue details
        id: issue
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            return issue.data;

      - name: Update README.md
        run: |
          ISSUE_BODY="${{ fromJson(steps.issue.outputs.result).body }}"
          
          # Extract relevant information from issue body
          APP_NAME=$(echo "$ISSUE_BODY" | grep -oP '(?<=Application Name\n\n).*')
          APP_URL=$(echo "$ISSUE_BODY" | grep -oP '(?<=Application URL\n\n).*')
          CATEGORY=$(echo "$ISSUE_BODY" | grep -oP '(?<=Category\n\n).*')
          APP_DESCRIPTION=$(echo "$ISSUE_BODY" | grep -oP '(?<=Description\n\n).*')
          
          # Check if the application is open source
          if echo "$ISSUE_BODY" | grep -q "\[X\] Open Source"; then
            OPEN_SOURCE_ICON="[![Open-Source Software][oss icon]]($APP_URL)"
          else
            OPEN_SOURCE_ICON=""
          fi
          
          # Check if the application is free
          if echo "$ISSUE_BODY" | grep -q "\[X\] Free"; then
            FREE_ICON="![Freeware][freeware icon]"
          else
            FREE_ICON=""
          fi
          
          # Add new entry to README.md
          sed -i "/## $CATEGORY/a * [$APP_NAME]($APP_URL) - $APP_DESCRIPTION $OPEN_SOURCE_ICON $FREE_ICON" README.md

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add ${{ fromJson(steps.issue.outputs.result).title }} to ${{ fromJson(steps.issue.outputs.result).labels[1].name }} category"
          title: "Add ${{ fromJson(steps.issue.outputs.result).title }} to ${{ fromJson(steps.issue.outputs.result).labels[1].name }} category"
          body: |
            This PR adds ${{ fromJson(steps.issue.outputs.result).title }} to the ${{ fromJson(steps.issue.outputs.result).labels[1].name }} category in the README.md file.
            
            Closes #${{ github.event.issue.number }}
          branch: add-${{ github.event.issue.number }}
          base: main

      - name: Close Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: 'closed'
            })